// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Provider
        store={
                Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      }
        }
>
        <styled.div>
                <styled.div>
                        <styled.ul>
                                <styled.li>
                                        <Styled(NavLink)
                                                activeClassName="act"
                                                exact={true}
                                                to="/home"
                                        >
                                                Home 
                                        </Styled(NavLink)>
                                </styled.li>
                                <styled.li>
                                        <Styled(NavLink)
                                                activeClassName="act"
                                                exact={true}
                                                to="/favorite"
                                        >
                                                Favorites
                                        </Styled(NavLink)>
                                </styled.li>
                        </styled.ul>
                        <ThemeSelector
                                changeTheme={[Function]}
                        />
                </styled.div>
                <styled.div>
                        <Switch>
                                <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/home"
                                />
                                <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/favorite"
                                />
                                <Redirect
                                        from="/"
                                        push={false}
                                        to="/home"
                                />
                        </Switch>
                </styled.div>
        </styled.div>
</Provider>,
      "theme": Object {
        "cardBackground": "#fec492",
        "favoritePageBackground": "#c8bed7",
        "gifPageBackground": "#969ec3",
        "headerBackground": "#fde1cc",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div>
                    <styled.ul>
                              <styled.li>
                                        <Styled(NavLink)
                                                  activeClassName="act"
                                                  exact={true}
                                                  to="/home"
                                        >
                                                  Home 
                                        </Styled(NavLink)>
                              </styled.li>
                              <styled.li>
                                        <Styled(NavLink)
                                                  activeClassName="act"
                                                  exact={true}
                                                  to="/favorite"
                                        >
                                                  Favorites
                                        </Styled(NavLink)>
                              </styled.li>
                    </styled.ul>
                    <ThemeSelector
                              changeTheme={[Function]}
                    />
          </styled.div>
          <styled.div>
                    <Switch>
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/home"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/favorite"
                              />
                              <Redirect
                                        from="/"
                                        push={false}
                                        to="/home"
                              />
                    </Switch>
          </styled.div>
</styled.div>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.ul>
                            <styled.li>
                                          <Styled(NavLink)
                                                        activeClassName="act"
                                                        exact={true}
                                                        to="/home"
                                          >
                                                        Home 
                                          </Styled(NavLink)>
                            </styled.li>
                            <styled.li>
                                          <Styled(NavLink)
                                                        activeClassName="act"
                                                        exact={true}
                                                        to="/favorite"
                                          >
                                                        Favorites
                                          </Styled(NavLink)>
                            </styled.li>
              </styled.ul>
              <ThemeSelector
                            changeTheme={[Function]}
              />
</styled.div>,
            <styled.div>
              <Switch>
                            <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/home"
                            />
                            <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/favorite"
                            />
                            <Redirect
                                          from="/"
                                          push={false}
                                          to="/home"
                            />
              </Switch>
</styled.div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.ul>
                  <styled.li>
                                    <Styled(NavLink)
                                                      activeClassName="act"
                                                      exact={true}
                                                      to="/home"
                                    >
                                                      Home 
                                    </Styled(NavLink)>
                  </styled.li>
                  <styled.li>
                                    <Styled(NavLink)
                                                      activeClassName="act"
                                                      exact={true}
                                                      to="/favorite"
                                    >
                                                      Favorites
                                    </Styled(NavLink)>
                  </styled.li>
</styled.ul>,
                <ThemeSelector
                  changeTheme={[Function]}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.li>
                      <Styled(NavLink)
                                            activeClassName="act"
                                            exact={true}
                                            to="/home"
                      >
                                            Home 
                      </Styled(NavLink)>
</styled.li>,
                    <styled.li>
                      <Styled(NavLink)
                                            activeClassName="act"
                                            exact={true}
                                            to="/favorite"
                      >
                                            Favorites
                      </Styled(NavLink)>
</styled.li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(NavLink)
                        activeClassName="act"
                        exact={true}
                        to="/home"
>
                        Home 
</Styled(NavLink)>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "activeClassName": "act",
                        "children": "Home ",
                        "exact": true,
                        "to": "/home",
                      },
                      "ref": null,
                      "rendered": "Home ",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(NavLink)
                        activeClassName="act"
                        exact={true}
                        to="/favorite"
>
                        Favorites
</Styled(NavLink)>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "activeClassName": "act",
                        "children": "Favorites",
                        "exact": true,
                        "to": "/favorite",
                      },
                      "ref": null,
                      "rendered": "Favorites",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "changeTheme": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                                component={[Function]}
                                exact={true}
                                path="/home"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/favorite"
                />
                <Redirect
                                from="/"
                                push={false}
                                to="/home"
                />
</Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/home"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/favorite"
/>,
                  <Redirect
                    from="/"
                    push={false}
                    to="/home"
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/home",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/favorite",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "from": "/",
                    "push": false,
                    "to": "/home",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Provider
          store={
                    Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            }
          }
>
          <styled.div>
                    <styled.div>
                              <styled.ul>
                                        <styled.li>
                                                  <Styled(NavLink)
                                                            activeClassName="act"
                                                            exact={true}
                                                            to="/home"
                                                  >
                                                            Home 
                                                  </Styled(NavLink)>
                                        </styled.li>
                                        <styled.li>
                                                  <Styled(NavLink)
                                                            activeClassName="act"
                                                            exact={true}
                                                            to="/favorite"
                                                  >
                                                            Favorites
                                                  </Styled(NavLink)>
                                        </styled.li>
                              </styled.ul>
                              <ThemeSelector
                                        changeTheme={[Function]}
                              />
                    </styled.div>
                    <styled.div>
                              <Switch>
                                        <Route
                                                  component={[Function]}
                                                  exact={true}
                                                  path="/home"
                                        />
                                        <Route
                                                  component={[Function]}
                                                  exact={true}
                                                  path="/favorite"
                                        />
                                        <Redirect
                                                  from="/"
                                                  push={false}
                                                  to="/home"
                                        />
                              </Switch>
                    </styled.div>
          </styled.div>
</Provider>,
        "theme": Object {
          "cardBackground": "#fec492",
          "favoritePageBackground": "#c8bed7",
          "gifPageBackground": "#969ec3",
          "headerBackground": "#fde1cc",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <styled.div>
                        <styled.ul>
                                    <styled.li>
                                                <Styled(NavLink)
                                                            activeClassName="act"
                                                            exact={true}
                                                            to="/home"
                                                >
                                                            Home 
                                                </Styled(NavLink)>
                                    </styled.li>
                                    <styled.li>
                                                <Styled(NavLink)
                                                            activeClassName="act"
                                                            exact={true}
                                                            to="/favorite"
                                                >
                                                            Favorites
                                                </Styled(NavLink)>
                                    </styled.li>
                        </styled.ul>
                        <ThemeSelector
                                    changeTheme={[Function]}
                        />
            </styled.div>
            <styled.div>
                        <Switch>
                                    <Route
                                                component={[Function]}
                                                exact={true}
                                                path="/home"
                                    />
                                    <Route
                                                component={[Function]}
                                                exact={true}
                                                path="/favorite"
                                    />
                                    <Redirect
                                                from="/"
                                                push={false}
                                                to="/home"
                                    />
                        </Switch>
            </styled.div>
</styled.div>,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.ul>
                                <styled.li>
                                                <Styled(NavLink)
                                                                activeClassName="act"
                                                                exact={true}
                                                                to="/home"
                                                >
                                                                Home 
                                                </Styled(NavLink)>
                                </styled.li>
                                <styled.li>
                                                <Styled(NavLink)
                                                                activeClassName="act"
                                                                exact={true}
                                                                to="/favorite"
                                                >
                                                                Favorites
                                                </Styled(NavLink)>
                                </styled.li>
                </styled.ul>
                <ThemeSelector
                                changeTheme={[Function]}
                />
</styled.div>,
              <styled.div>
                <Switch>
                                <Route
                                                component={[Function]}
                                                exact={true}
                                                path="/home"
                                />
                                <Route
                                                component={[Function]}
                                                exact={true}
                                                path="/favorite"
                                />
                                <Redirect
                                                from="/"
                                                push={false}
                                                to="/home"
                                />
                </Switch>
</styled.div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.ul>
                    <styled.li>
                                        <Styled(NavLink)
                                                            activeClassName="act"
                                                            exact={true}
                                                            to="/home"
                                        >
                                                            Home 
                                        </Styled(NavLink)>
                    </styled.li>
                    <styled.li>
                                        <Styled(NavLink)
                                                            activeClassName="act"
                                                            exact={true}
                                                            to="/favorite"
                                        >
                                                            Favorites
                                        </Styled(NavLink)>
                    </styled.li>
</styled.ul>,
                  <ThemeSelector
                    changeTheme={[Function]}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.li>
                        <Styled(NavLink)
                                                activeClassName="act"
                                                exact={true}
                                                to="/home"
                        >
                                                Home 
                        </Styled(NavLink)>
</styled.li>,
                      <styled.li>
                        <Styled(NavLink)
                                                activeClassName="act"
                                                exact={true}
                                                to="/favorite"
                        >
                                                Favorites
                        </Styled(NavLink)>
</styled.li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(NavLink)
                          activeClassName="act"
                          exact={true}
                          to="/home"
>
                          Home 
</Styled(NavLink)>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "activeClassName": "act",
                          "children": "Home ",
                          "exact": true,
                          "to": "/home",
                        },
                        "ref": null,
                        "rendered": "Home ",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(NavLink)
                          activeClassName="act"
                          exact={true}
                          to="/favorite"
>
                          Favorites
</Styled(NavLink)>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "activeClassName": "act",
                          "children": "Favorites",
                          "exact": true,
                          "to": "/favorite",
                        },
                        "ref": null,
                        "rendered": "Favorites",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "changeTheme": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/home"
                  />
                  <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/favorite"
                  />
                  <Redirect
                                    from="/"
                                    push={false}
                                    to="/home"
                  />
</Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/home"
/>,
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/favorite"
/>,
                    <Redirect
                      from="/"
                      push={false}
                      to="/home"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/home",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/favorite",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "from": "/",
                      "push": false,
                      "to": "/home",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
